1.ASP.Net基础
	虚拟路径转换为物理路径：Server.MapPath("虚拟路径字符串")
	
	PR方法：所有请求都会访问对应的页面类里的PR方法
	
	plain：将报文体返回的内容以普通(字符串)的方式输出
	
	<% %>：指令集
	前台文件与后台类的对应：
		当浏览器访问一个地址为ashx文件时,会解析该文件里的指令集,并通过指令集里面的
		(CodeBehind)属性找到相对应的后台类并创建,该属性内的后台类名称必须与创建的
		后台类的名字相同,否则会报错,提示无法创建类型"<你创建的后台类的名称>",当
		指令集里面的(Class)文件名称于后台类里的名称不对应时也会报上一个属性值不一样时一样的错
		
	TryParse：该方法把一个字符串转换为一个数字,如果该字符串可以转换为数字,那么返回true,反之返回false

		语法：int.TryParse(需要转换的字符串变量,out 接收转换后值的变量)
	
	SQL防注入补充：当传进来的参数可以转换成非字符串时,那么就没必要使用参数化了

2.Web窗体
	aspx文件为什么可以访问cs文件中的受保护的全员变量：在编译时aspx文件会编译为一个类继承与cs文件
		例：<%@ Page Title="" Language="C#" AutoEventWireup="true" CodeBehind="Index.aspx.cs" Inherits="ASP.Web窗体导航栏.Index" %>
			<%@ HTML标题="" 语言="C#" 自动事件注册="true" 后置代码="Index.aspx.cs" 继承="ASP.Web窗体导航栏.Index" %>
			
	前台页面类通过方法封装HTML代码：在aspx中没有任何一个服务器控件的时候,整个页面的代码(内容)将会编译到对应的前台页面类的一个方法(_Render_control1(htmlTextWriter _w, Control parameterContainer))中

	当表单提交时会提交什么：将会提交Form表单中所有带name属性的标签
	
	表单三大元素：input、select、textarea
	
	表单提交文件：需设置表单method=post,enctype=multipart/form-data
		PS：设置了enctype属性后,浏览器生成请求报文时会生成分隔符分隔不同控件的内容
		
		C#代码接收浏览器上传文件：
			HttpPostedFile file = context.Request.Files[0];		--转换为相对应的File文件
			file.SaveAs(路径);		--尽量把路径转换为相对路径context.Server.MapPath(file.FileName)
				file.ContentLenngth：上传文件的大小